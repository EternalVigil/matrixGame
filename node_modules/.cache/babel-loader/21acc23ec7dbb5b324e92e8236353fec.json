{"ast":null,"code":"import { observable, action, toJS } from 'mobx';\n\nclass DataStore {\n  constructor(Data) {\n    this.gridSize = observable.box(9);\n    this.playerPosition = observable({\n      row: 0,\n      cell: 0\n    });\n    this.enemyPosition = observable({\n      row: 4,\n      cell: 4\n    });\n    this.movePlayer = action((targetRow, targetCell) => {\n      console.log('moving player');\n\n      if (this.playerPosition.row !== targetRow) {\n        this.playerPosition.row = targetRow;\n      }\n\n      if (this.playerPosition.cell !== targetCell) {\n        this.playerPosition.cell = targetCell;\n      }\n\n      this.moveEnemy();\n    });\n    this.moveEnemy = action(() => {\n      console.log('moving enemy');\n      const randomDirection = Math.floor(Math.random() * this.gridSize);\n      console.log(randomDirection);\n    });\n  }\n\n}\n\nexport default new DataStore();","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrixGame/src/stores/DataStore.js"],"names":["observable","action","toJS","DataStore","constructor","Data","gridSize","box","playerPosition","row","cell","enemyPosition","movePlayer","targetRow","targetCell","console","log","moveEnemy","randomDirection","Math","floor","random"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,MAApB,EAA4BC,IAA5B,QAAuC,MAAvC;;AAEA,MAAMC,SAAN,CAAgB;AACfC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAGlBC,QAHkB,GAGPN,UAAU,CAACO,GAAX,CAAe,CAAf,CAHO;AAAA,SAIlBC,cAJkB,GAIDR,UAAU,CAAC;AAACS,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAAD,CAJT;AAAA,SAKlBC,aALkB,GAKFX,UAAU,CAAC;AAACS,MAAAA,GAAG,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE;AAAf,KAAD,CALR;AAAA,SAOlBE,UAPkB,GAOLX,MAAM,CAAE,CAACY,SAAD,EAAYC,UAAZ,KAA2B;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,UAAG,KAAKR,cAAL,CAAoBC,GAApB,KAA4BI,SAA/B,EAA0C;AACzC,aAAKL,cAAL,CAAoBC,GAApB,GAA0BI,SAA1B;AACA;;AAED,UAAG,KAAKL,cAAL,CAAoBE,IAApB,KAA6BI,UAAhC,EAA4C;AAC3C,aAAKN,cAAL,CAAoBE,IAApB,GAA2BI,UAA3B;AACA;;AAED,WAAKG,SAAL;AACA,KAXkB,CAPD;AAAA,SAoBlBA,SApBkB,GAoBNhB,MAAM,CAAE,MAAM;AACzBc,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAME,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,KAAKf,QAAjC,CAAxB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ;AACA,KAJiB,CApBA;AACjB;;AAFc;;AA4BhB,eAAe,IAAIf,SAAJ,EAAf","sourcesContent":["import {observable, action, toJS} from 'mobx';\n\nclass DataStore {\n\tconstructor(Data) {\n\t}\n\n\tgridSize = observable.box(9);\n\tplayerPosition = observable({row: 0, cell: 0});\n\tenemyPosition = observable({row: 4, cell: 4});\n\n\tmovePlayer = action( (targetRow, targetCell) => {\n\t\tconsole.log('moving player');\n\t\tif(this.playerPosition.row !== targetRow) {\n\t\t\tthis.playerPosition.row = targetRow;\n\t\t}\n\n\t\tif(this.playerPosition.cell !== targetCell) {\n\t\t\tthis.playerPosition.cell = targetCell;\n\t\t}\n\n\t\tthis.moveEnemy();\n\t});\n\n\tmoveEnemy = action( () => {\n\t\tconsole.log('moving enemy');\n\t\tconst randomDirection = Math.floor( Math.random() * this.gridSize);\n\t\tconsole.log(randomDirection);\n\t});\n}\n\nexport default new DataStore();"]},"metadata":{},"sourceType":"module"}