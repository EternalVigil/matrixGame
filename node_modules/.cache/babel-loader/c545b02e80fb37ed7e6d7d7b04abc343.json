{"ast":null,"code":"var _jsxFileName = \"/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js\";\nimport React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport logo from \"./logo.svg\";\nconst rotate = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\nto {\n  transform: rotate(360deg);\n}\n`;\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\nconst Cell = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    display: flex;\n    width: 80%;\n    height: auto;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for (let i = 0; i < gridSize; i++) {\n    for (let j = 0; j < gridSize; j++) {\n      cells.push( /*#__PURE__*/React.createElement(Cell, {\n        coordinate: `${i}-${j}`,\n        xCoordinate: i,\n        yCoordinate: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    rows[i] = cells;\n    cells = [];\n  }\n\n  const playerMove = (x, y) => {\n    console.log(`moving to ${x}, ${y}`);\n\n    if (playerPosition.x !== x || playerPosition.y !== y) {\n      updatePlayerPosition({\n        x: x,\n        y: y\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, rows && rows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, row && row.map((cell, index) => {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${cell.coordinate}-${index}`,\n        onClick: () => {\n          playerMove(cell.props.xCoordinate, cell.props.yCoordinate);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }, playerPosition.x === cell.props.xCoordinate && playerPosition.y === cell.props.yCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 27\n        }\n      }));\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js"],"names":["React","useState","styled","keyframes","rotate","AppContainer","div","Grid","Row","Cell","App","playerPosition","updatePlayerPosition","x","y","gridSize","rows","cells","i","j","push","playerMove","console","log","map","row","index","cell","coordinate","props","xCoordinate","yCoordinate","logo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nimport logo from './logo.svg';\n\nconst rotate = keyframes`\nfrom {\n  transform: rotate(0deg);\n}\nto {\n  transform: rotate(360deg);\n}\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    display: flex;\n    width: 80%;\n    height: auto;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({x: 0, y: 0});\n\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for(let i = 0; i < gridSize; i++) {\n    \n    for (let j = 0; j < gridSize; j++) {\n      cells.push(<Cell coordinate={`${i}-${j}`} xCoordinate={i} yCoordinate={j} />);\n    }\n\n    rows[i] = cells;\n    cells=[];\n  }\n\n  const playerMove = (x, y) => {\n    console.log(`moving to ${x}, ${y}`);\n    if(playerPosition.x !== x || playerPosition.y !== y) {\n      updatePlayerPosition({x: x, y: y});\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Grid>\n        {\n          rows &&\n          rows.map((row, index) => {\n            return(\n              <Row key={index}>\n                {\n                  row &&\n                  row.map((cell, index) => {\n                    return(\n                      <Cell \n                        key={`${cell.coordinate}-${index}`}\n                        onClick={ () => {\n                            playerMove(cell.props.xCoordinate, cell.props.yCoordinate)\n                          }\n                        }\n                      >\n                        {\n                          playerPosition.x === cell.props.xCoordinate &&\n                          playerPosition.y === cell.props.yCoordinate &&\n                          <img src={logo} />\n                        } \n                      </Cell>\n                    );\n                  })\n                }\n              </Row>\n            );\n          })\n        }\n      </Grid>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}