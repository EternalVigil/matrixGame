{"ast":null,"code":"var _jsxFileName = \"/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport logo from \"./logo.svg\";\nimport enemyIcon from \"./angular-icon.svg\";\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    z-index: 2;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerRowPosition, updatePlayerRowPosition] = useState(0);\n  const [playerCellPosition, updatePlayerCellPosition] = useState(0);\n  const [enemyPosition, updateEnemyPosition] = useState({\n    rowCoordinate: 5,\n    cellCoordinate: 5\n  });\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for (let i = 0; i < gridSize; i++) {\n    for (let j = 0; j < gridSize; j++) {\n      cells.push( /*#__PURE__*/React.createElement(Cell, {\n        coordinate: `${i}-${j}`,\n        rowCoordinate: i,\n        cellCoordinate: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    rows[i] = cells;\n    cells = [];\n  }\n\n  const playerMove = (row, cell) => {\n    // console.log(`moving to ${row}, ${cell}`);\n    console.log(row);\n    console.log(playerRowPosition);\n\n    if (playerRowPosition !== row) {\n      updatePlayerRowPosition(playerRowPosition => row);\n    }\n  };\n\n  const enemyMove = () => {\n    const randomDirection = Math.floor(Math.random() * 9) + 1;\n\n    switch (randomDirection) {\n      case 1:\n        console.log('enemy move down left');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 2:\n        console.log('enemy move down');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate\n          });\n        }\n\n        break;\n\n      case 3:\n        console.log('enemy move down right');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n\n      case 4:\n        console.log('enemy move left');\n\n        if (enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 5:\n        console.log(`enemy won't move`);\n        break;\n\n      case 6:\n        console.log('enemy move right');\n\n        if (enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n\n      case 7:\n        console.log('enemy move up left');\n\n        if (enemyPosition.rowCoordinate > 0 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 8:\n        console.log('enemy move up');\n\n        if (enemyPosition.rowCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate\n          });\n        }\n\n        break;\n\n      case 9:\n        console.log('enemy move up right');\n\n        if (enemyPosition.rowCoordinate && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n    }\n  };\n\n  const handleInput = input => {\n    console.log(input.key);\n\n    if (input.key === 'ArrowDown') {\n      playerMove(playerRowPosition + 1, playerCellPosition);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', event => handleInput(event), false);\n    return () => window.removeEventListener('keydown', handleInput);\n  }, [handleInput]);\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, rows && rows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, row && row.map((cell, index) => {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${cell.coordinate}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }\n      }, playerRowPosition === cell.props.rowCoordinate && playerCellPosition === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"player\",\n        src: logo,\n        alt: \"player icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 27\n        }\n      }), enemyPosition.rowCoordinate === cell.props.rowCoordinate && enemyPosition.cellCoordinate === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"enemy\",\n        src: enemyIcon,\n        alt: \"enemy icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }));\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js"],"names":["React","useEffect","useState","styled","keyframes","rotate","AppContainer","div","Grid","Row","Cell","App","playerRowPosition","updatePlayerRowPosition","playerCellPosition","updatePlayerCellPosition","enemyPosition","updateEnemyPosition","rowCoordinate","cellCoordinate","gridSize","rows","cells","i","j","push","playerMove","row","cell","console","log","enemyMove","randomDirection","Math","floor","random","handleInput","input","key","window","addEventListener","event","removeEventListener","map","index","coordinate","props","logo","enemyIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nimport logo from './logo.svg';\nimport enemyIcon from './angular-icon.svg';\n\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    z-index: 2;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerRowPosition, updatePlayerRowPosition] = useState(0);\n  const [playerCellPosition, updatePlayerCellPosition] = useState(0);\n  const [enemyPosition, updateEnemyPosition] = useState({rowCoordinate: 5, cellCoordinate: 5});\n\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for(let i = 0; i < gridSize; i++) {\n    \n    for (let j = 0; j < gridSize; j++) {\n      cells.push(<Cell coordinate={`${i}-${j}`} rowCoordinate={i} cellCoordinate={j} />);\n    }\n\n    rows[i] = cells;\n    cells=[];\n  }\n\n  const playerMove = (row, cell) => {\n    // console.log(`moving to ${row}, ${cell}`);\n    console.log(row);\n    console.log(playerRowPosition);\n\n    if(playerRowPosition !== row) {\n      updatePlayerRowPosition(playerRowPosition => row);\n    }\n\n  };\n\n  const enemyMove = () => {\n    const randomDirection = Math.floor( Math.random() * 9) + 1;\n    switch (randomDirection) {\n      case 1:\n        console.log('enemy move down left');\n        if(enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate - 1});\n        }\n        break;\n      case 2: \n        console.log('enemy move down');\n        if(enemyPosition.rowCoordinate < gridSize - 1) {\n          updateEnemyPosition({ rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate});\n        }\n        break;\n      case 3: \n        console.log('enemy move down right');\n        if(enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate + 1});\n        }\n        break;\n      case 4: \n        console.log('enemy move left');\n        if(enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate, cellCoordinate: enemyPosition.cellCoordinate - 1});\n        }\n        break;\n      case 5: \n        console.log(`enemy won't move`);\n        break;\n      case 6: \n        console.log('enemy move right');\n        if (enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate, cellCoordinate: enemyPosition.cellCoordinate + 1})\n        }\n        break;\n      case 7: \n        console.log('enemy move up left');\n        if(enemyPosition.rowCoordinate > 0 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate - 1})\n        }\n        break;\n      case 8: \n        console.log('enemy move up');\n        if(enemyPosition.rowCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate});\n        }\n        break;\n      case 9: \n        console.log('enemy move up right');\n        if(enemyPosition.rowCoordinate && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate + 1})\n        }\n        break;\n    }\n  };\n\n  const handleInput = (input) => {\n    console.log(input.key);\n\n    if(input.key === 'ArrowDown') {\n      playerMove(playerRowPosition + 1, playerCellPosition);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', event => handleInput(event), false);\n    return () => window.removeEventListener('keydown', handleInput);\n  }, [handleInput]);\n\n  return (\n    <AppContainer>\n      <Grid>\n        {\n          rows &&\n          rows.map((row, index) => {\n            return(\n              <Row key={index}>\n                {\n                  row &&\n                  row.map((cell, index) => {\n                    return(\n                      <Cell \n                        key={`${cell.coordinate}-${index}`}\n                      >\n\n                        {\n                          playerRowPosition === cell.props.rowCoordinate &&\n                          playerCellPosition === cell.props.cellCoordinate &&\n                          <img className='player' src={logo} alt='player icon' />\n                        }\n\n                        {\n                          enemyPosition.rowCoordinate === cell.props.rowCoordinate &&\n                          enemyPosition.cellCoordinate === cell.props.cellCoordinate &&\n                          <img className='enemy' src={enemyIcon} alt='enemy icon' />\n                        }\n\n                      </Cell>\n                    );\n                  })\n                }\n              </Row>\n            );\n          })\n        }\n      </Grid>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}