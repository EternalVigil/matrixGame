{"ast":null,"code":"var _jsxFileName = \"/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js\";\nimport React, { useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport logo from \"./logo.svg\";\nimport enemyIcon from \"./angular-icon.svg\";\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({\n    rowCoordinate: 0,\n    cellCoordinate: 0\n  });\n  const [enemyPosition, updateEnemyPosition] = useState({\n    rowCoordinate: 5,\n    cellCoordinate: 5\n  });\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for (let i = 0; i < gridSize; i++) {\n    for (let j = 0; j < gridSize; j++) {\n      cells.push( /*#__PURE__*/React.createElement(Cell, {\n        coordinate: `${i}-${j}`,\n        rowCoordinate: i,\n        cellCoordinate: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    rows[i] = cells;\n    cells = [];\n  }\n\n  console.log(enemyPosition);\n\n  const playerMove = (row, cell) => {\n    console.log(`moving to ${row}, ${cell}`);\n\n    if (playerPosition.rowCoordinate !== row || playerPosition.cellCoordinate !== cell) {\n      updatePlayerPosition({\n        rowCoordinate: row,\n        cellCoordinate: cell\n      });\n      const randomDirection = Math.floor(Math.random() * 9) + 1;\n      console.log(randomDirection);\n\n      switch (1) {\n        case 1:\n          console.log('enemy move down left');\n\n          if (enemyPosition.cellCoordinate < gridSize - 1) {\n            updateEnemyPosition({\n              rowCoordinate: enemyPosition.rowCoordinate,\n              cellCoordinate: enemyPosition.cellCoordinate - 1\n            });\n          }\n\n          break;\n\n        case 2:\n          console.log('enemy move down');\n          break;\n\n        case 3:\n          console.log('enemy move down right');\n          break;\n\n        case 4:\n          console.log('enemy move left');\n          break;\n\n        case 5:\n          console.log(`enemy won't move`);\n          break;\n\n        case 6:\n          console.log('enemy move right');\n          break;\n\n        case 7:\n          console.log('enemy move up left');\n          break;\n\n        case 8:\n          console.log('enemy move up');\n          break;\n\n        case 9:\n          console.log('enemy move up right');\n          break;\n\n        default:\n          // code...\n          break;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, rows && rows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, row && row.map((cell, index) => {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${cell.coordinate}-${index}`,\n        onClick: () => {\n          playerMove(cell.props.xCoordinate, cell.props.yCoordinate);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 23\n        }\n      }, playerPosition.rowCoordinate === cell.props.rowCoordinate && playerPosition.cellCoordinate === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"player\",\n        src: logo,\n        alt: \"player icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 27\n        }\n      }), enemyPosition.rowCoordinate === cell.props.rowCoordinate && enemyPosition.cellCoordinate === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"enemy\",\n        src: enemyIcon,\n        alt: \"enemy icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 27\n        }\n      }));\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js"],"names":["React","useState","styled","keyframes","rotate","AppContainer","div","Grid","Row","Cell","App","playerPosition","updatePlayerPosition","rowCoordinate","cellCoordinate","enemyPosition","updateEnemyPosition","gridSize","rows","cells","i","j","push","console","log","playerMove","row","cell","randomDirection","Math","floor","random","map","index","coordinate","props","xCoordinate","yCoordinate","logo","enemyIcon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\n\nimport logo from './logo.svg';\nimport enemyIcon from './angular-icon.svg';\n\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({rowCoordinate: 0, cellCoordinate: 0});\n  const [enemyPosition, updateEnemyPosition] = useState({rowCoordinate: 5, cellCoordinate: 5});\n\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for(let i = 0; i < gridSize; i++) {\n    \n    for (let j = 0; j < gridSize; j++) {\n      cells.push(<Cell coordinate={`${i}-${j}`} rowCoordinate={i} cellCoordinate={j} />);\n    }\n\n    rows[i] = cells;\n    cells=[];\n  }\n\n  console.log(enemyPosition);\n\n  const playerMove = (row, cell) => {\n    console.log(`moving to ${row}, ${cell}`);\n    if(playerPosition.rowCoordinate !== row || playerPosition.cellCoordinate !== cell) {\n      updatePlayerPosition({rowCoordinate: row, cellCoordinate: cell});\n\n      const randomDirection = Math.floor( Math.random() * 9) + 1;\n      console.log(randomDirection);\n\n      switch (1) {\n        case 1:\n          console.log('enemy move down left');\n          if(enemyPosition.cellCoordinate < gridSize - 1) {\n            updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate, cellCoordinate: enemyPosition.cellCoordinate - 1});\n          }\n          break;\n        case 2: \n          console.log('enemy move down');\n          break;\n        case 3: \n          console.log('enemy move down right');\n          break;\n        case 4: \n          console.log('enemy move left');\n          break;\n        case 5: \n          console.log(`enemy won't move`);\n          break;\n        case 6: \n          console.log('enemy move right');\n          break;\n        case 7: \n          console.log('enemy move up left');\n          break;\n        case 8: \n          console.log('enemy move up');\n          break;\n        case 9: \n          console.log('enemy move up right');\n          break;\n\n        default:\n          // code...\n          break;\n      }\n\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Grid>\n        {\n          rows &&\n          rows.map((row, index) => {\n            return(\n              <Row key={index}>\n                {\n                  row &&\n                  row.map((cell, index) => {\n                    return(\n                      <Cell \n                        key={`${cell.coordinate}-${index}`}\n                        onClick={ () => { playerMove(cell.props.xCoordinate, cell.props.yCoordinate)} }\n                      >\n\n                        {\n                          playerPosition.rowCoordinate === cell.props.rowCoordinate &&\n                          playerPosition.cellCoordinate === cell.props.cellCoordinate &&\n                          <img className='player' src={logo} alt='player icon' />\n                        }\n\n                        {\n                          enemyPosition.rowCoordinate === cell.props.rowCoordinate &&\n                          enemyPosition.cellCoordinate === cell.props.cellCoordinate &&\n                          <img className='enemy' src={enemyIcon} alt='enemy icon' />\n                        }\n\n                      </Cell>\n                    );\n                  })\n                }\n              </Row>\n            );\n          })\n        }\n      </Grid>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}