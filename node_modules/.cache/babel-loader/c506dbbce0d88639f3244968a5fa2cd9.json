{"ast":null,"code":"var _jsxFileName = \"/Users/eternalvigil/Desktop/code-projects/matrixGame/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport logo from \"./logo.svg\";\nimport enemyIcon from \"./angular-icon.svg\";\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    z-index: 2;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nconst App = ({\n  AppStore\n}) => {\n  const [enemyPosition, updateEnemyPosition] = useState({\n    rowCoordinate: 5,\n    cellCoordinate: 5\n  });\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for (let i = 0; i < gridSize; i++) {\n    for (let j = 0; j < gridSize; j++) {\n      cells.push( /*#__PURE__*/React.createElement(Cell, {\n        coordinate: `${i}-${j}`,\n        rowCoordinate: i,\n        cellCoordinate: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    rows[i] = cells;\n    cells = [];\n  }\n\n  const playerPosition = toJS(AppStore.playerPosition);\n  console.log(playerPosition);\n\n  const playerMove = (row, cell) => {\n    console.log(`moving to ${row}, ${cell}`);\n\n    if (playerPosition.row !== row || playerCellPosition !== cell) {\n      enemyMove();\n    }\n  };\n\n  const enemyMove = () => {\n    const randomDirection = Math.floor(Math.random() * 9) + 1;\n\n    switch (randomDirection) {\n      case 1:\n        console.log('enemy move down left');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 2:\n        console.log('enemy move down');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate\n          });\n        }\n\n        break;\n\n      case 3:\n        console.log('enemy move down right');\n\n        if (enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate + 1,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n\n      case 4:\n        console.log('enemy move left');\n\n        if (enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 5:\n        console.log(`enemy won't move`);\n        break;\n\n      case 6:\n        console.log('enemy move right');\n\n        if (enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n\n      case 7:\n        console.log('enemy move up left');\n\n        if (enemyPosition.rowCoordinate > 0 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate - 1\n          });\n        }\n\n        break;\n\n      case 8:\n        console.log('enemy move up');\n\n        if (enemyPosition.rowCoordinate > 0) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate\n          });\n        }\n\n        break;\n\n      case 9:\n        console.log('enemy move up right');\n\n        if (enemyPosition.rowCoordinate && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({\n            rowCoordinate: enemyPosition.rowCoordinate - 1,\n            cellCoordinate: enemyPosition.cellCoordinate + 1\n          });\n        }\n\n        break;\n\n      default:\n        console.log('oops');\n        break;\n    }\n  };\n\n  const handleInput = input => {\n    console.log(input.key);\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', event => handleInput(event));\n    return () => window.removeEventListener('keydown', handleInput);\n  }, []);\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, rows && rows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, row && row.map((cell, index) => {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${cell.coordinate}-${index}`,\n        onClick: () => {\n          playerMove(cell.props.rowCoordinate, cell.props.cellCoordinate);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }\n      }, playerPosition.row === cell.props.rowCoordinate && playerCellPosition === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"player\",\n        src: logo,\n        alt: \"player icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 27\n        }\n      }), enemyPosition.rowCoordinate === cell.props.rowCoordinate && enemyPosition.cellCoordinate === cell.props.cellCoordinate && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"enemy\",\n        src: enemyIcon,\n        alt: \"enemy icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }));\n    }));\n  })));\n};\n\nexport default inject('AppStore')(observer(App));","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrixGame/src/App.js"],"names":["React","useEffect","useState","styled","keyframes","inject","observer","toJS","rotate","AppContainer","div","Grid","Row","Cell","App","AppStore","enemyPosition","updateEnemyPosition","rowCoordinate","cellCoordinate","gridSize","rows","cells","i","j","push","playerPosition","console","log","playerMove","row","cell","playerCellPosition","enemyMove","randomDirection","Math","floor","random","handleInput","input","key","window","addEventListener","event","removeEventListener","map","index","coordinate","props","logo","enemyIcon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {inject, observer} from 'mobx-react';\nimport {toJS} from 'mobx';\n\nimport logo from './logo.svg';\nimport enemyIcon from './angular-icon.svg';\n\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex: 0 0 calc(100% / 9);\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 calc(100% / 9);\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    position: absolute;\n    display: flex;\n    width: 80%;\n    height: auto;\n  }\n\n  .player {\n    z-index: 2;\n    animation: ${rotate} 4s linear infinite;\n  }\n`;\n\nconst App = ({AppStore}) => {\n  const [enemyPosition, updateEnemyPosition] = useState({rowCoordinate: 5, cellCoordinate: 5});\n\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for(let i = 0; i < gridSize; i++) {\n    \n    for (let j = 0; j < gridSize; j++) {\n      cells.push(<Cell coordinate={`${i}-${j}`} rowCoordinate={i} cellCoordinate={j} />);\n    }\n\n    rows[i] = cells;\n    cells=[];\n  }\n\n  const playerPosition = toJS(AppStore.playerPosition);\n  console.log(playerPosition);\n\n  const playerMove = (row, cell) => {\n    console.log(`moving to ${row}, ${cell}`);\n    if(playerPosition.row !== row || playerCellPosition !== cell) {\n      enemyMove();\n    }\n  };\n\n  const enemyMove = () => {\n    const randomDirection = Math.floor( Math.random() * 9) + 1;\n    switch (randomDirection) {\n      case 1:\n        console.log('enemy move down left');\n        if(enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate - 1});\n        }\n        break;\n      case 2: \n        console.log('enemy move down');\n        if(enemyPosition.rowCoordinate < gridSize - 1) {\n          updateEnemyPosition({ rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate});\n        }\n        break;\n      case 3: \n        console.log('enemy move down right');\n        if(enemyPosition.rowCoordinate < gridSize - 1 && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate + 1, cellCoordinate: enemyPosition.cellCoordinate + 1});\n        }\n        break;\n      case 4: \n        console.log('enemy move left');\n        if(enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate, cellCoordinate: enemyPosition.cellCoordinate - 1});\n        }\n        break;\n      case 5: \n        console.log(`enemy won't move`);\n        break;\n      case 6: \n        console.log('enemy move right');\n        if (enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate, cellCoordinate: enemyPosition.cellCoordinate + 1})\n        }\n        break;\n      case 7: \n        console.log('enemy move up left');\n        if(enemyPosition.rowCoordinate > 0 && enemyPosition.cellCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate - 1})\n        }\n        break;\n      case 8: \n        console.log('enemy move up');\n        if(enemyPosition.rowCoordinate > 0) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate});\n        }\n        break;\n      case 9: \n        console.log('enemy move up right');\n        if(enemyPosition.rowCoordinate && enemyPosition.cellCoordinate < gridSize - 1) {\n          updateEnemyPosition({rowCoordinate: enemyPosition.rowCoordinate - 1, cellCoordinate: enemyPosition.cellCoordinate + 1})\n        }\n        break;\n\n      default: \n        console.log('oops');\n        break;\n    }\n  };\n\n  const handleInput = (input) => {\n    console.log(input.key);\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', event => handleInput(event));\n    return () => window.removeEventListener('keydown', handleInput);\n  }, []);\n\n  return (\n    <AppContainer>\n      <Grid>\n        {\n          rows &&\n          rows.map((row, index) => {\n            return(\n              <Row key={index}>\n                {\n                  row &&\n                  row.map((cell, index) => {\n                    return(\n                      <Cell \n                        key={`${cell.coordinate}-${index}`}\n                        onClick={ () => { playerMove(cell.props.rowCoordinate, cell.props.cellCoordinate)} }\n                      >\n\n                        {\n                          playerPosition.row === cell.props.rowCoordinate &&\n                          playerCellPosition === cell.props.cellCoordinate &&\n                          <img className='player' src={logo} alt='player icon' />\n                        }\n\n                        {\n                          enemyPosition.rowCoordinate === cell.props.rowCoordinate &&\n                          enemyPosition.cellCoordinate === cell.props.cellCoordinate &&\n                          <img className='enemy' src={enemyIcon} alt='enemy icon' />\n                        }\n\n                      </Cell>\n                    );\n                  })\n                }\n              </Row>\n            );\n          })\n        }\n      </Grid>\n    </AppContainer>\n  );\n}\n\nexport default inject('AppStore')(observer(App));\n"]},"metadata":{},"sourceType":"module"}