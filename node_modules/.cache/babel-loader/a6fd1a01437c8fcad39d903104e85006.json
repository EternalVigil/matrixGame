{"ast":null,"code":"var _jsxFileName = \"/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport logo from \"./logo.svg\";\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\nconst Row = styled.div`\n  display: flex;\n  flex: 1 auto;\n  width: 100%;\n`;\nconst Cell = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 9.99999%;\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for (let i = 0; i < gridSize; i++) {\n    for (let j = 0; j < gridSize; j++) {\n      cells.push( /*#__PURE__*/React.createElement(Cell, {\n        coordinate: `${i}-${j}`,\n        xCoordinate: i,\n        yCoordinate: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    rows[i] = cells;\n    cells = [];\n  }\n\n  return /*#__PURE__*/React.createElement(AppContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, rows && rows.map((row, index) => {\n    return /*#__PURE__*/React.createElement(Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, row && row.map((cell, index) => {\n      console.log(cell.props);\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${cell.coordinate}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, playerPosition.x === cell.props.xCoordinate && playerPosition.y === cell.props.yCoordinate && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"currentLocation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }\n      }, \"HI\"));\n    }));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/eternalvigil/Desktop/code-projects/matrix/src/App.js"],"names":["React","useState","styled","AppContainer","div","Grid","Row","Cell","App","playerPosition","updatePlayerPosition","x","y","gridSize","rows","cells","i","j","push","map","row","index","cell","console","log","props","coordinate","xCoordinate","yCoordinate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAIA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;;;;;;;CAAhC;AASA,MAAMC,IAAI,GAAGH,MAAM,CAACE,GAAI;;;;;;;CAAxB;AASA,MAAME,GAAG,GAAGJ,MAAM,CAACE,GAAI;;;;CAAvB;AAMA,MAAMG,IAAI,GAAGL,MAAM,CAACE,GAAI;;;;;;;;CAAxB;;AAUA,SAASI,GAAT,GAAe;AACb,QAAM,CAACC,cAAD,EAAiBC,oBAAjB,IAAyCT,QAAQ,CAAC;AAACU,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAAD,CAAvD;AAEA,QAAMC,QAAQ,GAAG,CAAjB;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAnB,EAA6BG,CAAC,EAA9B,EAAkC;AAEhC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AACjCF,MAAAA,KAAK,CAACG,IAAN,eAAW,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAG,GAAEF,CAAE,IAAGC,CAAE,EAA5B;AAA+B,QAAA,WAAW,EAAED,CAA5C;AAA+C,QAAA,WAAW,EAAEC,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;;AAEDH,IAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUD,KAAV;AACAA,IAAAA,KAAK,GAAC,EAAN;AACD;;AAED,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,IAAI,IACJA,IAAI,CAACK,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvB,wBACE,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEID,GAAG,IACHA,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOD,KAAP,KAAiB;AACvBE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,0BACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAG,GAAEH,IAAI,CAACI,UAAW,IAAGL,KAAM,EADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIZ,cAAc,CAACE,CAAf,KAAqBW,IAAI,CAACG,KAAL,CAAWE,WAAhC,IACAlB,cAAc,CAACG,CAAf,KAAqBU,IAAI,CAACG,KAAL,CAAWG,WADhC,iBAEA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADF;AAaD,KAfD,CAHJ,CADF;AAuBD,GAxBD,CAHJ,CADF,CADF;AAkCD;;AAED,eAAepB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport logo from './logo.svg';\n\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1 auto;\n  height: 100vh;\n  background-color: #4a4a4a;\n`;\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50vw;\n  height: 50vw;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex: 1 auto;\n  width: 100%;\n`;\n\nconst Cell = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 0 0 9.99999%;\n  height: 100%;\n  border: 1px dashed #ececec;\n  overflow: hidden;\n`;\n\nfunction App() {\n  const [playerPosition, updatePlayerPosition] = useState({x: 0, y: 0});\n\n  const gridSize = 9;\n  let rows = [];\n  let cells = [];\n\n  for(let i = 0; i < gridSize; i++) {\n    \n    for (let j = 0; j < gridSize; j++) {\n      cells.push(<Cell coordinate={`${i}-${j}`} xCoordinate={i} yCoordinate={j} />);\n    }\n\n    rows[i] = cells;\n    cells=[];\n  }\n\n  return (\n    <AppContainer>\n      <Grid>\n        {\n          rows &&\n          rows.map((row, index) => {\n            return(\n              <Row key={index}>\n                {\n                  row &&\n                  row.map((cell, index) => {\n                    console.log(cell.props);\n                    return(\n                      <Cell \n                        key={`${cell.coordinate}-${index}`}\n                      >\n                        {\n                          playerPosition.x === cell.props.xCoordinate &&\n                          playerPosition.y === cell.props.yCoordinate &&\n                          <div className='currentLocation'>\n                            HI\n                          </div>\n                        } \n                      </Cell>\n                    );\n                  })\n                }\n              </Row>\n            );\n          })\n        }\n      </Grid>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}